package main

import (
	"flag"
	"fmt"
	"log"
	"os"

	"github.com/ryanbyrne30/malware-scanner/internal/interfaces"
	"github.com/ryanbyrne30/malware-scanner/internal/resources/clamav"
	"github.com/ryanbyrne30/malware-scanner/internal/utils"
)

type application struct {
	infoLog *log.Logger
	errorLog *log.Logger
	scanner interfaces.MalwareScanner
}

func main() {
	configPtr := flag.String("config", "/etc/clamav/clamd.conf", "Config file to use for clamdscan")
	portPtr := flag.Int("port", 9000, "Port to run server on")
	flag.Parse()
	if !utils.FileExists(*configPtr) {
		panic(fmt.Sprintln("Config file does not exist:", *configPtr))
	}

	infoLog := log.New(os.Stdout, "INFO\t", log.Ldate|log.Ltime)
	errorLog := log.New(os.Stderr, "ERROR\t", log.Ldate|log.Ltime)

	scanner := &clamav.Clamav{ Config: *configPtr }

	app := &application{
		infoLog: infoLog,
		errorLog: errorLog,
		scanner: scanner,
	}

	srv := app.routes()

	err := srv.Run(fmt.Sprintf("0.0.0.0:%v", *portPtr))
	errorLog.Fatal(err.Error())
}