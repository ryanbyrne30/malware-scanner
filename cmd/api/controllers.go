package main

import (
	"net/http"
	"os"

	"github.com/gin-gonic/gin"
)

type scanResponse struct {
	File string 	`json:"file"`
	Ok bool 		`json:"ok"`
	Status string	`json:"status"`
}

func (app *application) scanFiles(c *gin.Context) {
	form, _ := c.MultipartForm()
	files := form.File["file"]
	response := []scanResponse{}

	for _, file := range files {
		app.infoLog.Println("Uploaded file:", file.Filename)
		tempFile, err := os.CreateTemp("", "uploaded-file")
		if err != nil {
			app.errorLog.Printf("Could not create temp file for: %s\n", file.Filename)
			response = append(response, scanResponse{
				File: file.Filename,
				Ok: false,
				Status: "Could not create temporary file for file",
			})
			continue
		}

		err = c.SaveUploadedFile(file, tempFile.Name())
		if err != nil {
			app.errorLog.Printf("Could not save uploaded file to: %s\n", tempFile.Name())
			response = append(response, scanResponse{
				File: file.Filename,
				Ok: false,
				Status: "Could not save to temporary file",
			})
			continue
		}

		result, err := app.clamav.ScanFile(tempFile.Name())
		if err != nil {
			app.errorLog.Printf("Error when scanning file %s: %s\n", file.Filename, err.Error())
			response = append(response, scanResponse{
				File: file.Filename,
				Ok: false,
				Status: err.Error(),
			})
			continue
		}

		app.infoLog.Printf("Result [%s]: %v\n", file.Filename, result.Ok)

		response = append(response, scanResponse{
			File: file.Filename,
			Ok: result.Ok,
			Status: result.Status,
		})

		err = os.Remove(tempFile.Name())
		if err != nil {
			app.errorLog.Printf("Could not remove temporary file: %s\n", tempFile.Name())
		}
	}

	c.JSON(http.StatusOK, response)
}