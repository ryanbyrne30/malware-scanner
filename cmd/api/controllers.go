package main

import (
	"net/http"
	"os"

	"github.com/ryanbyrne30/malware-scanner/internal/interfaces"

	"github.com/gin-gonic/gin"
)

func (app *application) scanFiles(g *gin.Context) {
	form, _ := g.MultipartForm()
	files := form.File["file"]
	savedFiles := []string{}

	for _, file := range files {
		app.infoLog.Println("Uploaded file:", file.Filename)
		tempFile, err := os.CreateTemp("", "uploaded-file")
		if err != nil {
			app.errorLog.Printf("Could not create temp file for: %s\n", file.Filename)
			continue
		}

		err = g.SaveUploadedFile(file, tempFile.Name())
		if err != nil {
			app.errorLog.Printf("Could not save uploaded file to: %s\n", tempFile.Name())
			continue
		}

		savedFiles = append(savedFiles, tempFile.Name())
	}


	scanResults, err := app.scanner.Scan(savedFiles)
	if err != nil {
		app.errorLog.Printf(err.Error())
		g.IndentedJSON(http.StatusInternalServerError, &interfaces.ErrorResponse{
			Message: "Error occured when scanning files",
			Error: err,
		})
		return
	}

	g.IndentedJSON(http.StatusOK, scanResults)
}